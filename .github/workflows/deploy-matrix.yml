name: Matrix Deploy

on:
  push:
    branches: [ main, staging, qa ]

jobs:
  deploy-staging:
    if: github.ref == 'refs/heads/staging'
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ${{ github.sha }}-staging
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_REGISTRY_STAGING }}
          username: ${{ secrets.DOCKER_USERNAME_STAGING }}
          password: ${{ secrets.DOCKER_PASSWORD_STAGING }}
      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_REGISTRY_STAGING }}/glowup:${IMAGE_TAG} .
          docker push ${{ secrets.DOCKER_REGISTRY_STAGING }}/glowup:${IMAGE_TAG}
      - name: Deploy to DigitalOcean App Platform
        env:
          DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DO_ACCESS_TOKEN_STAGING }}
        run: |
          doctl apps update ${{ secrets.DO_APP_ID_STAGING }} --spec .do/app-staging.yaml --wait
      - name: Notify Slack
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: '{"text":"Staging deployed: ${{ github.sha }}"}'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_STAGING }}

  deploy-qa:
    if: github.ref == 'refs/heads/qa'
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ${{ github.sha }}-qa
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_REGISTRY_QA }}
          username: ${{ secrets.DOCKER_USERNAME_QA }}
          password: ${{ secrets.DOCKER_PASSWORD_QA }}
      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_REGISTRY_QA }}/glowup:${IMAGE_TAG} .
          docker push ${{ secrets.DOCKER_REGISTRY_QA }}/glowup:${IMAGE_TAG}
      - name: Deploy to DigitalOcean App Platform
        env:
          DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DO_ACCESS_TOKEN_QA }}
        run: |
          doctl apps update ${{ secrets.DO_APP_ID_QA }} --spec .do/app-qa.yaml --wait
      - name: Notify Slack
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: '{"text":"QA deployed: ${{ github.sha }}"}'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_QA }}

  deploy-production:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ${{ github.sha }}-production
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_REGISTRY_PRODUCTION }}
          username: ${{ secrets.DOCKER_USERNAME_PRODUCTION }}
          password: ${{ secrets.DOCKER_PASSWORD_PRODUCTION }}
      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_REGISTRY_PRODUCTION }}/glowup:${IMAGE_TAG} .
          docker push ${{ secrets.DOCKER_REGISTRY_PRODUCTION }}/glowup:${IMAGE_TAG}
      - name: Deploy to AWS ECS
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        run: |
          aws ecs update-service --cluster ${{ secrets.AWS_ECS_CLUSTER }} --service ${{ secrets.AWS_ECS_SERVICE }} --force-new-deployment
      - name: Notify Slack
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: '{"text":"Production deployed: ${{ github.sha }}"}'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_PRODUCTION }} 