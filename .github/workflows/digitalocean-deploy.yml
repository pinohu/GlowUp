name: DigitalOcean Production Deployment

on:
  push:
    branches: [ main ]

jobs:
  deploy-production:
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ${{ github.sha }}-production
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DigitalOcean
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Provision Production Database
        id: create_db
        run: |
          DB_NAME=glowup_production
          doctl databases create $DB_NAME --engine pg --size db-s-1vcpu-2gb --num-nodes 2 --region nyc1
          DB_CONN=$(doctl databases connection get $DB_NAME --format URI --no-header)
          echo "DB_URL=$DB_CONN" >> $GITHUB_ENV
        env:
          DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Build and push Docker image
        run: |
          docker build -t registry.digitalocean.com/${{ secrets.DOCR_REGISTRY }}/glowup:${IMAGE_TAG} .
          echo ${{ secrets.DOCR_PASSWORD }} | docker login registry.digitalocean.com -u ${{ secrets.DOCR_USERNAME }} --password-stdin
          docker push registry.digitalocean.com/${{ secrets.DOCR_REGISTRY }}/glowup:${IMAGE_TAG}

      - name: Deploy to DigitalOcean App Platform
        run: |
          envsubst < .do/app-production.yaml > .do/app-production-resolved.yaml
          doctl apps create --spec .do/app-production-resolved.yaml --wait
        env:
          DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          GITHUB_SHA: ${{ env.IMAGE_TAG }}
          DOCR_REGISTRY: ${{ secrets.DOCR_REGISTRY }}
          DB_URL: ${{ env.DB_URL }}
          API_URL: ${{ secrets.API_URL }}
          GA_ID: ${{ secrets.GA_ID || 'DISABLED' }}

      - name: Notify Slack
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: '{"text":"Production deployed: ${{ github.sha }}"}' 
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_PRODUCTION }} 