{"ast":null,"code":"//@ts-nocheck\nimport React,{useState}from'react';import{ChakraProvider,Flex,Box,Button,Text,CircularProgress,CircularProgressLabel,Checkbox,Modal,ModalOverlay,ModalContent,ModalHeader,ModalBody}from'@chakra-ui/react';import{motion}from'framer-motion';import{IconChevronLeft,IconClock,IconHourglass,IconPlus}from'@tabler/icons-react';import{kStyleGlobal}from'../../theme';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DailyRoutine=()=>{const currentDate=new Date();const[routines,setRoutines]=useState([{\"name\":\"Morning Prayer\",\"time\":\"6:00 AM\",\"completed\":true,\"duration\":\"15 min\"},{\"name\":\"Mass\",\"time\":\"7:30 AM\",\"completed\":true,\"duration\":\"45 min\"},{\"name\":\"Work Sanctification\",\"time\":\"9:00 AM\",\"completed\":false,\"duration\":\"30 min\"},{\"name\":\"Mental Prayer\",\"time\":\"12:00 PM\",\"completed\":false,\"duration\":\"20 min\"}]);const progress=50;const[isQuickActionOpen,setIsQuickActionOpen]=useState(false);return/*#__PURE__*/_jsx(ChakraProvider,{theme:kStyleGlobal,children:/*#__PURE__*/_jsxs(Flex,{direction:\"column\",h:\"100vh\",bg:\"background\",p:6,children:[/*#__PURE__*/_jsxs(Flex,{justify:\"space-between\",align:\"center\",mb:6,children:[/*#__PURE__*/_jsx(Button,{variant:\"ghost\",p:0,onClick:()=>window.history.back(),children:/*#__PURE__*/_jsx(IconChevronLeft,{size:24})}),/*#__PURE__*/_jsx(Text,{fontSize:\"xl\",fontWeight:\"bold\",children:\"Daily Routine\"}),/*#__PURE__*/_jsx(Box,{w:6})]}),/*#__PURE__*/_jsx(Text,{fontSize:\"md\",mb:6,opacity:0.8,children:currentDate.toLocaleDateString(\"en-US\",{weekday:\"long\",month:\"long\",day:\"numeric\"})}),/*#__PURE__*/_jsx(Flex,{align:\"center\",justify:\"center\",mb:8,children:/*#__PURE__*/_jsx(CircularProgress,{value:progress,size:\"120px\",color:\"primary.100\",children:/*#__PURE__*/_jsx(CircularProgressLabel,{children:/*#__PURE__*/_jsx(Text,{fontSize:\"xl\",fontWeight:\"bold\",children:\"\".concat(progress,\"%\")})})})}),/*#__PURE__*/_jsx(Text,{fontSize:\"lg\",textAlign:\"center\",mb:8,color:\"primary.100\",children:\"Great start! Keep glowing!\"}),/*#__PURE__*/_jsx(Flex,{direction:\"column\",gap:4,flex:1,overflowY:\"auto\",children:routines.map((routine,index)=>/*#__PURE__*/_jsx(motion.div,{whileHover:{scale:1.02},whileTap:{scale:0.98},children:/*#__PURE__*/_jsxs(Flex,{bg:\"cardColor\",p:4,borderRadius:\"xl\",justify:\"space-between\",align:\"center\",children:[/*#__PURE__*/_jsxs(Flex,{direction:\"column\",gap:2,children:[/*#__PURE__*/_jsx(Text,{fontSize:\"md\",fontWeight:\"semibold\",children:routine.name}),/*#__PURE__*/_jsxs(Flex,{gap:4,children:[/*#__PURE__*/_jsxs(Flex,{align:\"center\",gap:1,children:[/*#__PURE__*/_jsx(IconClock,{size:16}),/*#__PURE__*/_jsx(Text,{fontSize:\"sm\",opacity:0.8,children:routine.time})]}),/*#__PURE__*/_jsxs(Flex,{align:\"center\",gap:1,children:[/*#__PURE__*/_jsx(IconHourglass,{size:16}),/*#__PURE__*/_jsx(Text,{fontSize:\"sm\",opacity:0.8,children:routine.duration})]})]})]}),/*#__PURE__*/_jsx(Checkbox,{isChecked:routine.completed,colorScheme:\"primary\",size:\"lg\"})]})},index))}),/*#__PURE__*/_jsx(Button,{position:\"fixed\",bottom:24,right:6,w:12,h:12,borderRadius:\"full\",onClick:()=>setIsQuickActionOpen(true),children:/*#__PURE__*/_jsx(IconPlus,{size:24})}),/*#__PURE__*/_jsxs(Modal,{isOpen:isQuickActionOpen,onClose:()=>setIsQuickActionOpen(false),children:[/*#__PURE__*/_jsx(ModalOverlay,{}),/*#__PURE__*/_jsxs(ModalContent,{children:[/*#__PURE__*/_jsx(ModalHeader,{children:/*#__PURE__*/_jsx(Text,{fontSize:\"lg\",fontWeight:\"bold\",children:\"Add Activity\"})}),/*#__PURE__*/_jsx(ModalBody,{children:/*#__PURE__*/_jsx(Flex,{direction:\"column\",gap:4,children:[\"Prayer\",\"Mass\",\"Meditation\",\"Reading\"].map(activity=>/*#__PURE__*/_jsx(Button,{variant:\"ghost\",justifyContent:\"start\",onClick:()=>setIsQuickActionOpen(false),children:/*#__PURE__*/_jsx(Text,{children:activity})},activity))})})]})]})]})});};export default DailyRoutine;","map":{"version":3,"names":["React","useState","ChakraProvider","Flex","Box","Button","Text","CircularProgress","CircularProgressLabel","Checkbox","Modal","ModalOverlay","ModalContent","ModalHeader","ModalBody","motion","IconChevronLeft","IconClock","IconHourglass","IconPlus","kStyleGlobal","jsx","_jsx","jsxs","_jsxs","DailyRoutine","currentDate","Date","routines","setRoutines","progress","isQuickActionOpen","setIsQuickActionOpen","theme","children","direction","h","bg","p","justify","align","mb","variant","onClick","window","history","back","size","fontSize","fontWeight","w","opacity","toLocaleDateString","weekday","month","day","value","color","concat","textAlign","gap","flex","overflowY","map","routine","index","div","whileHover","scale","whileTap","borderRadius","name","time","duration","isChecked","completed","colorScheme","position","bottom","right","isOpen","onClose","activity","justifyContent"],"sources":["C:/Users/VRLab/Downloads/GlowUp/src/views/HabitBuilding/DailyRoutine.tsx"],"sourcesContent":["//@ts-nocheck\n\nimport React, { useState } from 'react';\nimport { \n  ChakraProvider, \n  Flex, \n  Box, \n  Button, \n  Text, \n  CircularProgress, \n  CircularProgressLabel, \n  Checkbox, \n  Modal, \n  ModalOverlay, \n  ModalContent, \n  ModalHeader, \n  ModalBody \n} from '@chakra-ui/react';\nimport { motion } from 'framer-motion';\nimport { \n  IconChevronLeft, \n  IconClock, \n  IconHourglass, \n  IconPlus \n} from '@tabler/icons-react';\nimport { kStyleGlobal } from '../../theme';\n\nconst DailyRoutine = () => {\n  const currentDate = new Date();\n  const [routines, setRoutines] = useState([\n    {\n      \"name\": \"Morning Prayer\",\n      \"time\": \"6:00 AM\",\n      \"completed\": true,\n      \"duration\": \"15 min\"\n    },\n    {\n      \"name\": \"Mass\",\n      \"time\": \"7:30 AM\",\n      \"completed\": true,\n      \"duration\": \"45 min\"\n    },\n    {\n      \"name\": \"Work Sanctification\",\n      \"time\": \"9:00 AM\",\n      \"completed\": false,\n      \"duration\": \"30 min\"\n    },\n    {\n      \"name\": \"Mental Prayer\",\n      \"time\": \"12:00 PM\",\n      \"completed\": false,\n      \"duration\": \"20 min\"\n    }\n  ]);\n  const progress = 50;\n  const [isQuickActionOpen, setIsQuickActionOpen] = useState(false);\n\n  return (\n    <ChakraProvider theme={kStyleGlobal}>\n      <Flex\n        direction=\"column\"\n        h=\"100vh\"\n        bg=\"background\"\n        p={6}\n      >\n        <Flex\n          justify=\"space-between\"\n          align=\"center\"\n          mb={6}\n        >\n          <Button\n            variant=\"ghost\"\n            p={0}\n            onClick={() => window.history.back()}\n          >\n            <IconChevronLeft size={24} />\n          </Button>\n          <Text\n            fontSize=\"xl\"\n            fontWeight=\"bold\"\n          >\n            Daily Routine\n          </Text>\n          <Box w={6} />\n        </Flex>\n        <Text\n          fontSize=\"md\"\n          mb={6}\n          opacity={0.8}\n        >\n          {currentDate.toLocaleDateString(\"en-US\", {\n            weekday: \"long\",\n            month: \"long\",\n            day: \"numeric\"\n          })}\n        </Text>\n        <Flex\n          align=\"center\"\n          justify=\"center\"\n          mb={8}\n        >\n          <CircularProgress\n            value={progress}\n            size=\"120px\"\n            color=\"primary.100\"\n          >\n            <CircularProgressLabel>\n              <Text\n                fontSize=\"xl\"\n                fontWeight=\"bold\"\n              >\n                {`${progress}%`}\n              </Text>\n            </CircularProgressLabel>\n          </CircularProgress>\n        </Flex>\n        <Text\n          fontSize=\"lg\"\n          textAlign=\"center\"\n          mb={8}\n          color=\"primary.100\"\n        >\n          Great start! Keep glowing!\n        </Text>\n        <Flex\n          direction=\"column\"\n          gap={4}\n          flex={1}\n          overflowY=\"auto\"\n        >\n          {routines.map((routine, index) => (\n            <motion.div\n              key={index}\n              whileHover={{ scale: 1.02 }}\n              whileTap={{ scale: 0.98 }}\n            >\n              <Flex\n                bg=\"cardColor\"\n                p={4}\n                borderRadius=\"xl\"\n                justify=\"space-between\"\n                align=\"center\"\n              >\n                <Flex\n                  direction=\"column\"\n                  gap={2}\n                >\n                  <Text\n                    fontSize=\"md\"\n                    fontWeight=\"semibold\"\n                  >\n                    {routine.name}\n                  </Text>\n                  <Flex gap={4}>\n                    <Flex\n                      align=\"center\"\n                      gap={1}\n                    >\n                      <IconClock size={16} />\n                      <Text\n                        fontSize=\"sm\"\n                        opacity={0.8}\n                      >\n                        {routine.time}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      align=\"center\"\n                      gap={1}\n                    >\n                      <IconHourglass size={16} />\n                      <Text\n                        fontSize=\"sm\"\n                        opacity={0.8}\n                      >\n                        {routine.duration}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                </Flex>\n                <Checkbox\n                  isChecked={routine.completed}\n                  colorScheme=\"primary\"\n                  size=\"lg\"\n                />\n              </Flex>\n            </motion.div>\n          ))}\n        </Flex>\n        <Button\n          position=\"fixed\"\n          bottom={24}\n          right={6}\n          w={12}\n          h={12}\n          borderRadius=\"full\"\n          onClick={() => setIsQuickActionOpen(true)}\n        >\n          <IconPlus size={24} />\n        </Button>\n        <Modal\n          isOpen={isQuickActionOpen}\n          onClose={() => setIsQuickActionOpen(false)}\n        >\n          <ModalOverlay />\n          <ModalContent>\n            <ModalHeader>\n              <Text\n                fontSize=\"lg\"\n                fontWeight=\"bold\"\n              >\n                Add Activity\n              </Text>\n            </ModalHeader>\n            <ModalBody>\n              <Flex\n                direction=\"column\"\n                gap={4}\n              >\n                {[\"Prayer\", \"Mass\", \"Meditation\", \"Reading\"].map(activity => (\n                  <Button\n                    key={activity}\n                    variant=\"ghost\"\n                    justifyContent=\"start\"\n                    onClick={() => setIsQuickActionOpen(false)}\n                  >\n                    <Text>{activity}</Text>\n                  </Button>\n                ))}\n              </Flex>\n            </ModalBody>\n          </ModalContent>\n        </Modal>\n      </Flex>\n    </ChakraProvider>\n  );\n};\n\nexport default DailyRoutine;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}